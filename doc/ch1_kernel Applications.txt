1.1 关于内核程序
VxWorks内核应用程序以与内核本身相同的模式和内存空间执行。在这方面，它们不同于与其他操作系统（如UNIX和Linux）的应用程序，也不同于VxWorks实时（RTP）应用程序。
内核应用程序可以交互式下载并在VxWorks目标系统上运行，或者与操作系统映像链接并（可选地）配置为在引导时自动执行。
在内核中执行的VxWorks应用程序被创建为可重新定位的对象模块。它们可以更具体地称为基于内核的应用程序模块，但是像本指南中所做的那样，简单地将它们称为内核应用程序模块或内核应用程序通常比较方便。（它们有时在Workbench项目类型可下载内核模块的缩写之后称为DKM，即使它们与内核链接时也是如此。）内核应用程序不应该与作为实时进程（RTP）在用户模式下执行的应用程序混淆。
当构建基于内核的应用程序模块时，将用户代码链接到所需的VxWorks库，并生成ELF二进制文件。内核应用程序使用VxWorks工具，包括定义操作系统接口和数据结构的头文件。
内核应用模块可以是：
通过对象模块加载程序下载并动态链接到操作系统。
与操作系统静态链接，使它们成为系统映像的一部分。
内核模块对于快速开发和调试很有用，因为不需要为应用程序的每次迭代重新构建操作系统映像。该方法也可用于生产系统的诊断设备。各种开发工具，包括调试器和shell（主机或内核），可以用来下载和管理模块。模块可以从内核支持的任何主机文件系统（NFS、FTP等）下载到目标。
内核应用模块也可以存储在Flash或ROM、ROMFS文件系统或磁盘上。一旦加载到目标中，内核应用程序模块就可以从shell或Workbench交互式地启动。
静态链接到操作系统的应用程序模块可以与shell或Workbench交互运行。VxWorks还可以被配置为在启动时自动启动它们。静态连接和自动启动显然适用于生产系统。
在内核空间中运行的应用程序不作为进程执行；它只是在内核空间中运行的另一组任务。内核不保护内核应用程序的任何不当行为的保护，并且应用程序也同样不保护其他内核应用程序的保护，内核模块在超级用户模式下在相同的地址空间中运行。